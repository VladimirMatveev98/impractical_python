Описания проектов:

Глава 1:
   1) pseudonyms.py - Генерация псевдонимов. Модуль random, кортежи, бесконечный цикл.

Глава 2:
   1) load_dictionary.py - Загрузка списка слов из файла. Блок try/except, открытие файла with open(файл)
   2) palindromes.py - Поиск палиндромов в списке слов из файла. import load_dictionary
   3) palingrams.py - Поиск палинграм с учётом всех слов в файле-словаре.
   4) optimized_palingrams.py - Поиск палинграм. Оптимизация за счёт использования множеств (set) вместо списка (list).
      Оптимизировано примерно в 100 раз за счёт изменения типа данных.
   5) cprofile_test.py - Тестирование palingrams.py. Модуль cProfile, отчёт о работе программы.

Глава 3:
   1) load_dictionary.py. Идентичен load_dictionary из главы 2.
   2) anagrams.py - Поиск анаграмм. Использование сортировки для проверки идентичного количества символов.
   3) phrase_anagrams.py - Конструктор анаграмм.
   4) voldemort_bruteforce - Поиск псевдонима "voldemort". Решение "в лоб", поиск всех буквосочетаний в изначальном имени
      и отсеивание совсем неподходящих через фильтры. Используются множества, метод str.startswith(), использование
      большого количества кастомных функций.

Глава 4:
   -- Все данные, подающиеся на вход программы, в данной главе указываются внутри кода в специальном разделе.
   
   1) route_cipher_decrypt_prototype.py - Код-прототип дешифратора для маршрутного шифра.
   2) route_cipher_decrypt.py - Готовое решение дешифратора маршрутного шифра. Подробности в документации.
   3) rail_fence_cipher_encrypt.py - Шифратор текста зигзагообразным шрифтом. Подробности в документации.
   4) rail_fence_cipher_decrypt.py - Дешифрока текста, кодированного зигзагообразным шрифтом. Вы знаете, где искать подробности.
   ------Окончание стандартных проектов главы 4. Начало сложных проектов, предлагаемых автором для самостоятельного выполнения--
   5.1) three-row_fence_cipher_encrypt.py - Шифратор текста усовершенствованным и усложнённым зигзагообразным шрифтом.
   5.2) three-row_fence_cipher_decrypt.py - Дешифратор текста для усовершенствованного зигзагообразного шрифта.

Глава 5:
   1) null_chipher_finder.py - Дешифратор для "нулевого шифра".

Глава 6 - пропущена в настоящем репозитории.

Глава 7:
   1) super_rats.py - генетические алгоритмы. В данном случае, подбор переменной до определённого значения
      путём случайных "мутаций" в наборе значений (популяции).
